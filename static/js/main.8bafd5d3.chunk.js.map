{"version":3,"sources":["constants.js","reducers.js","registerServiceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","actions.js","index.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","initialStateRobots","isPending","robots","error","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","Card","name","email","id","className","alt","src","CardList","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","hasError","errorInfo","this","setState","Component","App","onRequestRobots","onSearchChange","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","response","json","data","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8bafd5d3.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\"\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_SUCCESS,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_FAILED\n} from \"./constants\";\n\nconst initialStateSearch = {\n\tsearchField: ''\n}\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n\tswitch (action.type) {\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn Object.assign({}, state, { searchField: action.payload })\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst initialStateRobots = {\n\tisPending: false,\n\trobots: [],\n\terror: ''\n}\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n\tswitch (action.type) {\n\t\tcase REQUEST_ROBOTS_PENDING:\n\t\t\treturn Object.assign({}, state, { isPending: true })\n\t\tcase REQUEST_ROBOTS_SUCCESS:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\trobots: action.payload,\n\t\t\t\tisPending: false\n\t\t\t})\n\t\tcase REQUEST_ROBOTS_FAILED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\terror: action.payload,\n\t\t\t\tisPending: false\n\t\t\t})\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'auto', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\tthis.setState({ hasError: true })\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Oooops, Something Going Wrong!</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n}\n\nexport default ErrorBoundary","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport './App.css';\n\nimport { requestRobots, setSearchField } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending,\n\t\terror: state.requestRobots.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n\t\tonRequestRobots: () => dispatch(requestRobots())\n\t}\n}\n\nclass App extends Component {\n\n\tcomponentDidMount() {\n\t\tthis.props.onRequestRobots()\n\t}\n\n\trender() {\n\t\tconst { searchField, onSearchChange, robots, isPending } = this.props\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t})\n\n\t\treturn isPending ?\n\t\t\t<h1>Loading</h1> :\n\t\t\t(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>robofriends</h1>\n\t\t\t\t\t<SearchBox searchChange={ onSearchChange }/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList robots={ filteredRobots }/>\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_SUCCESS,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_FAILED\n} from \"./constants\";\n\nexport const setSearchField = (text) => ({\n\ttype: CHANGE_SEARCH_FIELD,\n\tpayload: text\n})\n\nexport const requestRobots = () => (dispatch) => {\n\tdispatch({ type: REQUEST_ROBOTS_PENDING })\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n\t\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\"\nimport { searchRobots, requestRobots } from \"./reducers\";\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './containers/App';\nimport 'tachyons';\nimport './index.css';\n\nconst logger = createLogger()\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n\t<Provider store={ store }>\n\t\t<App/>\n\t</Provider>, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}